services:
  homepage:    
    image: ghcr.io/gethomepage/homepage:latest
    container_name: ${COMPOSE_PROJECT_NAME}
    environment:
      - HOMEPAGE_VAR_PROXMOX_USERNAME=${HOMEPAGE_VAR_PROXMOX_USERNAME}
      - HOMEPAGE_VAR_PROXMOX_PASSWORD=${HOMEPAGE_VAR_PROXMOX_PASSWORD}
      - HOMEPAGE_VAR_UNIFI_USERNAME=${HOMEPAGE_VAR_UNIFI_USERNAME}
      - HOMEPAGE_VAR_UNIFI_PASSWORD=${HOMEPAGE_VAR_UNIFI_PASSWORD}
      - HOMEPAGE_VAR_TRUENAS_USERNAME=${HOMEPAGE_VAR_TRUENAS_USERNAME}
      - HOMEPAGE_VAR_TRUENAS_PASSWORD=${HOMEPAGE_VAR_TRUENAS_PASSWORD}
      - HOMEPAGE_VAR_TRUENAS_API_KEY=${HOMEPAGE_VAR_TRUENAS_API_KEY}
    volumes:
      - type: bind
        source: /opt/portainer/homepage/config
        target: /app/config
        read_only: false
      # Uncomment the following lines if you do not use the docker-socket-proxy service
      # - type: bind # (optional) For docker integrations
      #   source: /var/run/docker.sock
      #   target: /var/run/docker.sock
      #   read_only: true
    networks:
      - docker-services
    ports:
      - 3000:3000

# Create a new network for the services to communicate over
#
# $ docker network create \
#   --driver bridge \
#   --subnet 172.100.0.0/16 \
#   --gateway 172.100.0.1 \
#   --opt "com.docker.network.bridge.enable_icc"="true" \
#   --opt "com.docker.network.bridge.enable_ip_masquerade"="true" \
#   --opt "com.docker.network.bridge.host_binding_ipv4"="0.0.0.0" \
#   --opt "com.docker.network.driver.mtu"="1500" \
#   docker-services

networks:
  docker-services:
    external: true