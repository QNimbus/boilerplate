services:
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: ${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    healthcheck:
      disable: true
    environment:
      - HOMEPAGE_VAR_PROXMOX_USERNAME=${HOMEPAGE_VAR_PROXMOX_USERNAME}
      - HOMEPAGE_VAR_PROXMOX_PASSWORD=${HOMEPAGE_VAR_PROXMOX_PASSWORD}
      - HOMEPAGE_VAR_UNIFI_USERNAME=${HOMEPAGE_VAR_UNIFI_USERNAME}
      - HOMEPAGE_VAR_UNIFI_PASSWORD=${HOMEPAGE_VAR_UNIFI_PASSWORD}
      - HOMEPAGE_VAR_TRUENAS_USERNAME=${HOMEPAGE_VAR_TRUENAS_USERNAME}
      - HOMEPAGE_VAR_TRUENAS_PASSWORD=${HOMEPAGE_VAR_TRUENAS_PASSWORD}
      - HOMEPAGE_VAR_TRUENAS_API_KEY=${HOMEPAGE_VAR_TRUENAS_API_KEY}
      - HOMEPAGE_VAR_PORTAINER_API_KEY_ENV_2=${HOMEPAGE_VAR_PORTAINER_API_KEY_ENV_2}
      - HOMEPAGE_VAR_PORTAINER_API_KEY_ENV_3=${HOMEPAGE_VAR_PORTAINER_API_KEY_ENV_3}
      - HOMEPAGE_VAR_PIHOLE_API_KEY=${HOMEPAGE_VAR_PIHOLE_API_KEY}
    volumes:
      - type: bind
        source: /opt/portainer/homepage/config
        target: /app/config
        read_only: false
      - type: volume
        source: icons
        target: /app/public/icons
        read_only: true
      # Uncomment the following lines if you do not use the docker-socket-proxy service
      # - type: bind # (optional) For docker integrations
      #   source: /var/run/docker.sock
      #   target: /var/run/docker.sock
      #   read_only: true
    networks:
      - traefik
    ports: []
    labels:
      traefik.enable: 'true'
      traefik.docker.network: traefik
      traefik.http.routers.homepage.entrypoints: websecure
      traefik.http.routers.homepage.rule: Host(`homepage.apps.vwn.io`)
      traefik.http.routers.homepage.tls: 'true'
      traefik.http.routers.homepage.tls.certresolver: porkbun_dns_resolver
      traefik.http.routers.homepage.service: homepage
      traefik.http.services.homepage.loadbalancer.server.port: 3000

networks:
  traefik:
    external: true

volumes:
  icons:
