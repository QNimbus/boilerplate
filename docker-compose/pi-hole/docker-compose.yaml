services:
  pihole:
    image: pihole/pihole:latest
    container_name: ${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    healthcheck:
      disable: true
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      # - "80:80/tcp"
    environment:
      - TZ=Europe/Amsterdam
      - DNSMASQ_LISTENING=all
      - FTLCONF_LOCAL_IPV4=${PIHOLE_LAN_IP} # Set to your server's LAN IP, used by web block modes.
      - WEBPASSWORD=${PIHOLE_ADMIN_PASSWORD} # tr -dc 'a-zA-Z0-9' </dev/urandom | head -c 16
    volumes:
      - type: volume
        source: etc
        target: /etc/pihole
        read_only: false
      - type: volume
        source: dnsmasq
        target: /etc/dnsmasq.d
        read_only: false
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    # cap_add:
    #   - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    networks:
      traefik:
    labels:
      traefik.enable: 'true'
      traefik.docker.network: traefik
      traefik.http.routers.pihole.entrypoints: websecure
      traefik.http.routers.pihole.rule: Host(`pihole.apps.vwn.io`)
      traefik.http.routers.pihole.tls: 'true'
      traefik.http.routers.pihole.tls.certresolver: porkbun_dns_resolver
      traefik.http.routers.pihole.service: pihole
      traefik.http.services.pihole.loadbalancer.server.port: 80

volumes:
  etc:
  dnsmasq:

networks:
  traefik:
    external: true
