services:
  portainer-ce:
    image: portainer/portainer-ce:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_app
    restart: always
    volumes:
      - type: volume
        source: data
        target: /data
        read_only: false
      - /var/run/docker.sock:/var/run/docker.sock
    ports: []
      # - 9000:9000
      # - 9443:9443
    networks:
      - traefik
    healthcheck:
      test: nc -z -v localhost 9000 || exit 1
      interval: 30s
      timeout: 5s
      retries: "3"
    labels:
      traefik.enable: 'true'
      traefik.http.routers.portainer.entrypoints: websecure
      traefik.http.routers.portainer.rule: Host(`portainer.apps.vwn.io`)
      traefik.http.routers.portainer.tls: 'true'
      traefik.http.routers.portainer.tls.certresolver: porkbun_dns_resolver
      traefik.http.routers.portainer.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: 9000

networks:
  traefik:
    external: true

volumes:
  data:

# To start the portainer service using 'docker run':
#
# sudo docker volume create portainer_data
# sudo docker run --detach \
#   --name portainer \
#   --net traefik \
#   -p 9000:9000 \
#   --restart always \
#   -v portainer_data:/data \
#   -v /var/run/docker.sock:/var/run/docker.sock \
#   -l traefik.enable=true \
#   -l traefik.docker.network=traefik \
#   -l traefik.http.routers.portainer.entrypoints=websecure \
#   -l 'traefik.http.routers.portainer.rule=Host(`portainer.apps.vwn.io`)' \
#   -l traefik.http.routers.portainer.tls=true \
#   -l traefik.http.routers.portainer.tls.certresolver=porkbun_dns_resolver \
#   -l traefik.http.routers.portainer.service=portainer \
#   -l traefik.http.services.portainer.loadbalancer.server.port=9000 \
#   portainer/portainer-ce:alpine
#
# sudo docker run --detach \
#   --name portainer_agent \
#   -p 9001:9001 \
#   --restart=always \
#   -v /var/run/docker.sock:/var/run/docker.sock \
#   -v /var/lib/docker/volumes:/var/lib/docker/volumes \
#   -v /:/host \
#   portainer/agent:2.21.5
